<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://duckbankbok.github.io/</id><title>뀨로그 (GGyulog)</title><subtitle>복영규의 블로그</subtitle> <updated>2024-08-24T15:03:05+09:00</updated> <author> <name>복영규(Younggyu Bok)</name> <uri>https://duckbankbok.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://duckbankbok.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://duckbankbok.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator> <rights> © 2024 복영규(Younggyu Bok) </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>메이플스토리 월드 | 랭킹 시스템 구현하기</title><link href="https://duckbankbok.github.io/posts/%EB%A9%94%EC%9D%B4%ED%94%8C%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9B%94%EB%93%9C-%EB%9E%AD%ED%82%B9-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="메이플스토리 월드 | 랭킹 시스템 구현하기" /><published>2024-08-24T15:00:00+09:00</published> <updated>2024-08-24T15:00:00+09:00</updated> <id>https://duckbankbok.github.io/posts/%EB%A9%94%EC%9D%B4%ED%94%8C%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9B%94%EB%93%9C-%EB%9E%AD%ED%82%B9-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/</id> <content src="https://duckbankbok.github.io/posts/%EB%A9%94%EC%9D%B4%ED%94%8C%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9B%94%EB%93%9C-%EB%9E%AD%ED%82%B9-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0/" /> <author> <name>복영규(Younggyu Bok)</name> </author> <category term="게임 개발" /> <category term="메이플스토리 월드" /> <summary> 랭킹 시스템은 RPG뿐만 아니라 MOBA, RTS 등 다양한 장르에서 사용되며, 게임을 플레이하는 근본적인 목적을 유저들에게 부여합니다. 이번 포스팅에서는 메이플스토리 월드에서 랭킹 시스템을 구현해 보겠습니다. 실습 월드는 카드 짝 맞추기 리메이크이며 코드는 공식 문서와 크리에이터 포럼을 참조하여 작성했습니다. 랭킹 시스템을 구현하기 위해서는 유저들의 순위를 매길 게임 데이터를 저장해야 합니다. 하지만 클라이언트 내 게임 데이터는 유저가 게임을 종료할 시 사라지기 때문에 게임 데이터를 유실하지 않도록 데이터베이스(DB)를 사용해야 합니다. 메이플스토리 월드 API는 다음과 같이 DB의 역할을 하는 4가지의 DataStorage를 제공합니다. GlobalDataStorage(공식 문서)... </summary> </entry> <entry><title>메이플스토리 월드 | 배지 추가하기</title><link href="https://duckbankbok.github.io/posts/%EB%A9%94%EC%9D%B4%ED%94%8C%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9B%94%EB%93%9C-%EB%B0%B0%EC%A7%80-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="메이플스토리 월드 | 배지 추가하기" /><published>2024-08-05T12:00:00+09:00</published> <updated>2024-08-24T15:00:13+09:00</updated> <id>https://duckbankbok.github.io/posts/%EB%A9%94%EC%9D%B4%ED%94%8C%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9B%94%EB%93%9C-%EB%B0%B0%EC%A7%80-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</id> <content src="https://duckbankbok.github.io/posts/%EB%A9%94%EC%9D%B4%ED%94%8C%EC%8A%A4%ED%86%A0%EB%A6%AC-%EC%9B%94%EB%93%9C-%EB%B0%B0%EC%A7%80-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/" /> <author> <name>복영규(Younggyu Bok)</name> </author> <category term="게임 개발" /> <category term="메이플스토리 월드" /> <summary> 게임 회사는 유저가 질리지 않고 오랫동안 게임을 플레이할 수 있도록 다양한 방법을 강구하는데, 보편적으로 사용되는 방법 중 하나는 업적 시스템입니다. 업적 시스템은 달성 목표를 설정하고 그에 맞는 보상을 제공하여 유저들의 성장 및 수집 욕구를 자극하는 시스템입니다. 메이플스토리 월드에서는 배지 시스템이라는 업적 시스템이 존재하며, 이번 포스팅은 월드에 배지를 추가하고 달성 목표를 이룬 유저에게 배지를 지급하는 것을 직접 실습해 보겠습니다. 실습 월드는 카드 짝 맞추기 리메이크이며 직접 해당 월드를 제작해 보고 싶은 분은 공식 문서를 참조해 주시길 바랍니다. 배지 등록하기 월드에 배지를 추가하기 위해서는 우선 배지의 정보를 등록해야 합니다. 배지 등록 화면은 메이플스토리 월드 공식 홈페이지의... </summary> </entry> <entry><title>웹 기반(HTML, CSS, JavaScript) RPG 만들기 - Life of YOUNGGYU</title><link href="https://duckbankbok.github.io/posts/%EC%9B%B9-%EA%B8%B0%EB%B0%98-rpg-%EA%B2%8C%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="웹 기반(HTML, CSS, JavaScript) RPG 만들기 - Life of YOUNGGYU" /><published>2023-07-23T23:00:00+09:00</published> <updated>2024-01-29T23:41:33+09:00</updated> <id>https://duckbankbok.github.io/posts/%EC%9B%B9-%EA%B8%B0%EB%B0%98-rpg-%EA%B2%8C%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0/</id> <content src="https://duckbankbok.github.io/posts/%EC%9B%B9-%EA%B8%B0%EB%B0%98-rpg-%EA%B2%8C%EC%9E%84-%EB%A7%8C%EB%93%A4%EA%B8%B0/" /> <author> <name>복영규(Younggyu Bok)</name> </author> <category term="게임 개발" /> <category term="JavaScript" /> <summary> Life of YOUNGGYU: https://duckbankbok.com 안녕하세요! 이번 포스팅에서는 웹 기반(HTML, CSS, JavaScript) RPG Life of YOUNGGYU를 만들어 봤습니다. Life of YOUNGGYU는 집 안 곳곳에 있는 NPC들을 통해 저를 소개하는 RPG입니다. 이 게임을 만들게 된 계기는 나만의 특별한 자기소개 페이지를 만들어 보고 싶다는 생각을 하던 중 웹을 통한 자기소개 페이지 겸 게임인 셀소.com을 알게 되었고, 저도 요새 게임 개발을 취미로 하고 있기 때문에 자기소개를 겸한 게임을 제 도메인에 서비스 해보면 좋을 것 같다는 생각이 들어 Life of YOUNGGYU를 만들게 되었습니다. 개발 과정 Life of YOUNGGYU는 게임 프레임... </summary> </entry> <entry><title>NSGA-II - A Fast, Elitist Algorithm for Multi-objecitve Optimization Problem</title><link href="https://duckbankbok.github.io/posts/nsga2/" rel="alternate" type="text/html" title="NSGA-II - A Fast, Elitist Algorithm for Multi-objecitve Optimization Problem" /><published>2023-06-30T00:00:00+09:00</published> <updated>2023-06-30T00:00:00+09:00</updated> <id>https://duckbankbok.github.io/posts/nsga2/</id> <content src="https://duckbankbok.github.io/posts/nsga2/" /> <author> <name>복영규(Younggyu Bok)</name> </author> <category term="OR" /> <category term="NSGA2" /> <summary> Introduction Welcome to this blog post on Non-dominated sorting genetic algorithm II (NSGA-II), a fast and elitist algorithm for multi-objective optimization problems. In the field of optimization, many real-world problems involve multiple conflicting objectives that need to be simultaneously optimized. Traditional single-objective optimization approaches are insufficient in handling such scen... </summary> </entry> <entry><title>Solving Traveling Salesman Problem (TSP) using Genetic Algorithm (GA) in Python</title><link href="https://duckbankbok.github.io/posts/solving-traveling-salesman-problem-using-genetic-algorithm-in-python/" rel="alternate" type="text/html" title="Solving Traveling Salesman Problem (TSP) using Genetic Algorithm (GA) in Python" /><published>2023-05-28T14:00:00+09:00</published> <updated>2023-06-05T22:13:45+09:00</updated> <id>https://duckbankbok.github.io/posts/solving-traveling-salesman-problem-using-genetic-algorithm-in-python/</id> <content src="https://duckbankbok.github.io/posts/solving-traveling-salesman-problem-using-genetic-algorithm-in-python/" /> <author> <name>복영규(Younggyu Bok)</name> </author> <category term="OR" /> <category term="TSP" /> <summary> Genetic Algorithm is a heuristic algorithm widely used in solving combinatorial optimization problems. One such problem is the Traveling Salesman Problem (TSP), which asks for the shortest route a salesman can take to visit a given set of cities and return to the starting point, without revisiting any city. TSP is known to be NP-hard, making it computationally hard to find an optimal solution. ... </summary> </entry> </feed>
